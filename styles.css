@import url('https://fonts.googleapis.com/css2?family=Figtree:wght@300&family=Lilita+One&display=swap');

/* 
fonts ----------------------------
font-family: 'Figtree', sans-serif;
font-family: 'Lilita One', cursive;
colors----------------------------
#222831 - darkest
#393E46 - grey
#00ADB5 - blue
#EEEEEE - white
*/

body {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: 'Kablammo', cursive;
  font-family: 'Figtree', sans-serif;
}

h1,
h2 {
  font-family: 'Lilita One', cursive;
  font-weight: 500;
}

a {
  text-decoration: none;
  color: #222831;
  font-weight: bold;
}

a:hover {
  text-decoration: underline;
}

nav {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  background-color: #00adb5;
}

.nav-left {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 20px;
}

.nav-right {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

.nav-right > ul {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 20px;
  margin: 0 20px;
  list-style: none;
  width: 100%;
}

.nav-right ul li {
  width: 120px;
  display: flex;
  justify-content: center;
  padding: 10px 0 10px 0;
}

header {
  text-transform: uppercase;

  color: black;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 10%;
  padding-bottom: 10%;
  padding-left: 20%;
  padding-right: 20%;
}

#duck {
  display: flex;
  background-color: #eeeeee;
  padding-left: 20%;
  padding-right: 10%;
}

#emergency {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 5%;
  padding-bottom: 5%;
}

.grid-item {
  border: 1px solid grey;
  box-shadow: 0 0px 10px lightgrey;
  border-radius: 10px;
}

.grid-item:hover {
  background-color: #eeeeee;
}

.grid-container {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 20px;
  width: 80%;
  margin: 0 auto;
  width: 60%;
}

.grid-item {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 150px;
}

.flex-container {
  display: flex;
  flex-direction: row;
}

.flex-item {
  width: 80%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 3%;
}

.flex-item a {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

form {
  display: flex;
  flex-direction: column;
  align-items: center;
}

footer {
  display: flex;
  flex-direction: column;
  text-align: center;
  background-color: #393e46;
  color: #eeeeee;
  padding-top: 40px;
}

input {
  padding: 1em;
  margin-bottom: 1em;
  width: 250px;
  font-size: 1em;
}
textarea {
  margin-bottom: 1em;
  padding: 1em;
  width: 250px;
  font-size: 16px;
  resize: none;
}

input:focus {
  outline: none;
  font-family: 'Lilita One', cursive;
}

textarea:focus {
  outline: 0;
  font-family: 'Lilita One', cursive;
}

button {
  width: 120px;
  height: 40px;
  margin-bottom: 40px;
  font-size: 1em;
  font-family: 'Lilita One', cursive;
}

.github {
  width: 50px;
  background-color: #eeeeee;
  border-radius: 50%;
  padding: 10px;
  margin-top: 20px;
  margin-bottom: 40px;
}

body {
  /*animation-name - animation-duration - animation-delay animation-iteration-count */
  animation: unblur 7s 0s 1;
}

/*Keyframe definition
  This custom keyframe rule named “unblur” will change the appearance of a text:
  it will start with a text-shadow and will end with no text-shadow.
  This is the custom animation that we will use inside the animation property */
@keyframes unblur {
  from {
    opacity: 0.1;
  }
  to {
    opacity: 1;
  }
}

@keyframes bounce {
  100% {
    transform: translateY(0);
    transform: translateY(0);
  }

  20% {
    transform: translateY(-5px);
    transform: translateY(-5px);
  }
}

a:hover,
button:hover {
  animation: bounce 0.5s 0s 1;
}

@keyframes rounding {
  from {
    border-radius: 0;
  }
  to {
    border-radius: 20px;
  }
}

input:focus {
  animation: rounding 1s 0s forwards;
}

textarea:focus {
  animation: rounding 1s 0s forwards;
}

header {
  /*here we define what properties the transition should apply (background-colo, color
and font-size*/
  transition-property: background-color color font-size;
  /* here we define how long our transition should last*/
  transition-duration: 2s;
  /* here we say that our transition should start0,5 seconds after the trigger*/
  transition-delay: 0.5s;
}

/* here we define how our transition properties will change on hover*/
header:hover {
  color: yellow;
  font-size: 1.6rem;
  background-color: #393e46;
}
